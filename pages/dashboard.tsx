import Head from 'next/head'
import Table from '@/components/table'
import { Button, Input } from '@/components/assests';
import { useState,useEffect,useMemo } from 'react';

import ArchytecstApi, { Building } from '@/utils/builddingsApi';

import styles from '@/styles/dashboard.module.sass'

const api = new ArchytecstApi()

export default function Home() {
  const [buildings,setBuildings] = useState<Building[]>([])
  const [searchValue,setSearchValue] = useState<string>("")
  const [selectedBuildings,setSelectedBuildings] = useState<Building[]>([])

  useEffect(() => {
    
    api.getBuildings().then( building => 
      setBuildings(building)
      );

  }, []); // El segundo par치metro [] indica que solo se ejecuta una vez, al montar el componente

  const filteredBuildings = useMemo(() => {
    return  buildings.filter( building => building.name.toLowerCase().includes(searchValue.toLowerCase()) ).map(({ uuid,image,refColor,location,isProtected, ...rest }) => {return rest;})
  }, [searchValue,buildings]);

  const handleRowClick = (row: any) => {
    setSelectedBuildings((prevSelectedBuildings) => {
      // Verificar si el row ya est치 seleccionado
      const isRowSelected = prevSelectedBuildings.map(building => building.name).includes(row.name);
  
      if (isRowSelected) {
        // Si el row est치 seleccionado, lo removemos de la lista de selectedBuildings
        return prevSelectedBuildings.filter((selectedRow) => selectedRow.name !== row.name);
      } else {
        // Si el row no est치 seleccionado, lo agregamos a la lista de selectedBuildings
        return [...prevSelectedBuildings, row];
      }
    });
  };

  return (
    <>
      <Head>
        <title>Panel de control</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1 style={{padding: '10px 50px'}}>Panel de control</h1>
      <div style={{padding: '10px 50px', display:'grid', gridTemplateColumns:'1fr 1fr 4fr',gap:'10px'}}>
        <Button  $primary>Eliminar</Button>
        <Button  $primary disabled={selectedBuildings.length!=1} >Modificar</Button>
        <Input placeholder='Ingrese nombre del edificio' onChange={(e) => setSearchValue(e.target.value )}></Input>
      </div>
      <div  className={styles.tableContainer}>   
        <Table data={filteredBuildings} onClick={handleRowClick} />
      </div>
      

    </>
  )
}
